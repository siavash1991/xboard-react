{"version":3,"file":"static/js/538.6bb9bd3e.chunk.js","mappings":"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","sources":["assets/data/validationSchemas.ts","components/organisms/UserSignInForm.tsx","components/pages/SignIn.tsx","components/templates/AuthLayout.tsx"],"sourcesContent":["// /validationSchemas.ts\nimport * as yup from 'yup';\n\nexport const signUpSchema = yup.object({\n\tusername: yup\n\t\t.string()\n\t\t.required('Username is required')\n\t\t.transform((value) => value && value.toLowerCase())\n\t\t.matches(\n\t\t\t/^[a-zA-Z][a-zA-Z0-9]*$/,\n\t\t\t'Username must start with a letter and can only contain letters and numbers'\n\t\t),\n\temail: yup\n\t\t.string()\n\t\t.email()\n\t\t.required('Email is required')\n\t\t.matches(\n\t\t\t/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n\t\t\t'Invalid email format'\n\t\t),\n\tpassword: yup\n\t\t.string()\n\t\t.required('Password is required')\n\t\t.min(8, 'Password must be at least 8 characters long')\n\t\t.matches(\n\t\t\t/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,\n\t\t\t'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character'\n\t\t),\n\n\tconfirmPassword: yup\n\t\t.string()\n\t\t.required('Confirm Password is required')\n\t\t.oneOf([yup.ref('password'), ''], 'Passwords must match'),\n});\n\nexport const signInSchema = yup.object({\n\tusername: yup\n\t\t.string()\n\t\t.required('Username is required')\n\t\t.transform((value) => value && value.toLowerCase())\n\t\t.matches(\n\t\t\t/^[a-zA-Z][a-zA-Z0-9]*$/,\n\t\t\t'Username must start with a letter and can only contain letters and numbers'\n\t\t),\n\tpassword: yup\n\t\t.string()\n\t\t.required('Password is required')\n\t\t.min(8, 'Password must be at least 8 characters long')\n\t\t.matches(\n\t\t\t/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,\n\t\t\t'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character'\n\t\t),\n});\n\nexport const UserUpdateSchema = yup.object().shape({\n\temail: yup\n\t\t.string()\n\t\t.email()\n\t\t.required('Email is required')\n\t\t.matches(\n\t\t\t/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n\t\t\t'Invalid email format'\n\t\t),\n\tusername: yup\n\t\t.string()\n\t\t.required('Username is required')\n\t\t.transform((value) => value && value.toLowerCase())\n\t\t.matches(\n\t\t\t/^[a-zA-Z][a-zA-Z0-9]*$/,\n\t\t\t'Username must start with a letter and can only contain letters and numbers'\n\t\t),\n\tpassword: yup\n\t\t.string()\n\t\t.required('Password is required')\n\t\t.min(8, 'Password must be at least 8 characters long')\n\t\t.matches(\n\t\t\t/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,\n\t\t\t'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character'\n\t\t),\n\n\tconfirmPassword: yup\n\t\t.string()\n\t\t.required('Confirm Password is required')\n\t\t.oneOf([yup.ref('password'), ''], 'Passwords must match'),\n});\n","// src/components/organisms/UserSignInForm.tsx\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { login } from '@redux/authenticationSlice';\nimport { AppDispatch, RootState } from '@redux/store';\nimport { signInSchema } from '@assets/data/validationSchemas';\nimport ComponentWrapper from '@atoms/ComponentWrapper';\n\ninterface SignInFormInputs {\n\tusername: string;\n\tpassword: string;\n}\n\nconst UserSignInForm: React.FC = () => {\n\tconst dispatch = useDispatch<AppDispatch>();\n\tconst { isLoading, error } = useSelector(\n\t\t(state: RootState) => state.authentication\n\t);\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm<SignInFormInputs>({\n\t\tresolver: yupResolver(signInSchema),\n\t});\n\n\tconst onSubmit: SubmitHandler<SignInFormInputs> = (data) => {\n\t\tdispatch(login(data));\n\t};\n\n\treturn (\n\t\t<ComponentWrapper>\n\t\t\t<form\n\t\t\t\tonSubmit={handleSubmit(onSubmit)}\n\t\t\t\tclassName=\"rounded-lg bg-white dark:bg-gray-800 bg-white dark:bg-gray-800 space-y-6 p-10\"\n\t\t\t>\n\t\t\t\t{error && typeof error === 'string' && (\n\t\t\t\t\t<div className=\"text-red-500\">{error}</div>\n\t\t\t\t)}\n\t\t\t\t<div>\n\t\t\t\t\t<label\n\t\t\t\t\t\thtmlFor=\"username\"\n\t\t\t\t\t\tclassName=\"block mb-2 text-sm font-medium text-gray-900\"\n\t\t\t\t\t>\n\t\t\t\t\t\tUsername:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t{...register('username')}\n\t\t\t\t\t\tclassName=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n\t\t\t\t\t\tplaceholder=\"Enter your username\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t{errors?.username && (\n\t\t\t\t\t\t<div className=\"text-red-500\">\n\t\t\t\t\t\t\t{errors.username.message}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label\n\t\t\t\t\t\thtmlFor=\"password\"\n\t\t\t\t\t\tclassName=\"block mb-2 text-sm font-medium text-gray-900\"\n\t\t\t\t\t>\n\t\t\t\t\t\tPassword:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t{...register('password')}\n\t\t\t\t\t\tclassName=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n\t\t\t\t\t\tplaceholder=\"Enter your password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t{errors?.password && (\n\t\t\t\t\t\t<div className=\"text-red-500\">\n\t\t\t\t\t\t\t{errors.password.message}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName={`w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center ${\n\t\t\t\t\t\tisLoading ? 'opacity-50 cursor-not-allowed' : ''\n\t\t\t\t\t}`}\n\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t>\n\t\t\t\t\t{isLoading ? 'Logging in...' : 'Login'}\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</ComponentWrapper>\n\t);\n};\n\nexport default UserSignInForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport XAuthLayout from '@templates/AuthLayout';\nimport XUserSignInForm from '@organisms/UserSignInForm';\n\nimport Logo from '@assets/images/favicon.svg';\n\nconst XSignIn: React.FC = () => {\n\treturn (\n\t\t<XAuthLayout>\n\t\t\t<div className=\"content-wrapper pt-20 flex flex-col items-center\">\n\t\t\t\t<img src={Logo} alt=\"Your Logo\" className=\"mb-4 h-16 w-auto\" />\n\n\t\t\t\t<h1 className=\"text-3xl font-extrabold text-gray-900 dark:text-white mb-2\">\n\t\t\t\t\tWelcome back!\n\t\t\t\t</h1>\n\t\t\t\t<p className=\"text-sm text-gray-600 dark:text-gray-300 mb-5\">\n\t\t\t\t\tLog in to your account to continue.\n\t\t\t\t</p>\n\n\t\t\t\t<div className=\"w-full max-w-md\">\n\t\t\t\t\t<XUserSignInForm />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"mt-4 text-sm text-gray-600 dark:text-gray-300\">\n\t\t\t\t\tDon't have an account?{' '}\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto=\"/signup\"\n\t\t\t\t\t\tclassName=\"text-blue-500 hover:underline\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSign up here\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</XAuthLayout>\n\t);\n};\n\nexport default XSignIn;\n","import React, { ReactNode } from 'react';\n\ninterface AuthLayoutProps {\n\tchildren: ReactNode;\n}\n\nconst XAuthLayout: React.FC<AuthLayoutProps> = ({ children }) => {\n\treturn (\n\t\t<div className=\"grid grid-cols-12 bg-gradient-to-b from-pale-azure to-pale-ivory min-h-screen\">\n\t\t\t<main className=\"col-span-12 page-content p-6\">\n\t\t\t\t<div className=\"components\">{children}</div>\n\t\t\t</main>\n\t\t</div>\n\t);\n};\n\nexport default XAuthLayout;\n"],"names":["signUpSchema","yup","username","required","transform","value","toLowerCase","matches","email","password","min","confirmPassword","oneOf","signInSchema","UserUpdateSchema","shape","UserSignInForm","dispatch","useDispatch","isLoading","error","useSelector","state","authentication","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","_jsx","ComponentWrapper","children","_jsxs","onSubmit","data","login","className","htmlFor","id","type","placeholder","message","concat","disabled","XSignIn","XAuthLayout","src","Logo","alt","XUserSignInForm","Link","to","_ref"],"sourceRoot":""}