{"version":3,"file":"static/js/782.41d434fa.chunk.js","mappings":"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","sources":["assets/data/validationSchemas.ts","components/organisms/UserUpdateForm.tsx","components/pages/UpdateProfile.tsx"],"sourcesContent":["// /validationSchemas.ts\nimport * as yup from 'yup';\n\nexport const signUpSchema = yup.object({\n\tusername: yup\n\t\t.string()\n\t\t.required('Username is required')\n\t\t.transform((value) => value && value.toLowerCase())\n\t\t.matches(\n\t\t\t/^[a-zA-Z][a-zA-Z0-9]*$/,\n\t\t\t'Username must start with a letter and can only contain letters and numbers'\n\t\t),\n\temail: yup\n\t\t.string()\n\t\t.email()\n\t\t.required('Email is required')\n\t\t.matches(\n\t\t\t/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n\t\t\t'Invalid email format'\n\t\t),\n\tpassword: yup\n\t\t.string()\n\t\t.required('Password is required')\n\t\t.min(8, 'Password must be at least 8 characters long')\n\t\t.matches(\n\t\t\t/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,\n\t\t\t'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character'\n\t\t),\n\n\tconfirmPassword: yup\n\t\t.string()\n\t\t.required('Confirm Password is required')\n\t\t.oneOf([yup.ref('password'), ''], 'Passwords must match'),\n});\n\nexport const signInSchema = yup.object({\n\tusername: yup\n\t\t.string()\n\t\t.required('Username is required')\n\t\t.transform((value) => value && value.toLowerCase())\n\t\t.matches(\n\t\t\t/^[a-zA-Z][a-zA-Z0-9]*$/,\n\t\t\t'Username must start with a letter and can only contain letters and numbers'\n\t\t),\n\tpassword: yup\n\t\t.string()\n\t\t.required('Password is required')\n\t\t.min(8, 'Password must be at least 8 characters long')\n\t\t.matches(\n\t\t\t/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,\n\t\t\t'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character'\n\t\t),\n});\n\nexport const UserUpdateSchema = yup.object().shape({\n\temail: yup\n\t\t.string()\n\t\t.email()\n\t\t.required('Email is required')\n\t\t.matches(\n\t\t\t/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n\t\t\t'Invalid email format'\n\t\t),\n\tusername: yup\n\t\t.string()\n\t\t.required('Username is required')\n\t\t.transform((value) => value && value.toLowerCase())\n\t\t.matches(\n\t\t\t/^[a-zA-Z][a-zA-Z0-9]*$/,\n\t\t\t'Username must start with a letter and can only contain letters and numbers'\n\t\t),\n\tpassword: yup\n\t\t.string()\n\t\t.required('Password is required')\n\t\t.min(8, 'Password must be at least 8 characters long')\n\t\t.matches(\n\t\t\t/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,\n\t\t\t'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character'\n\t\t),\n\n\tconfirmPassword: yup\n\t\t.string()\n\t\t.required('Confirm Password is required')\n\t\t.oneOf([yup.ref('password'), ''], 'Passwords must match'),\n});\n","import React, { useState } from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { UserUpdateSchema } from '@assets/data/validationSchemas';\n\nimport {\n\tCard,\n\tLabel,\n\tAvatar,\n\tTextInput,\n\tButton,\n\tFileInput,\n} from 'flowbite-react';\nimport ComponentWrapper from 'components/atoms/ComponentWrapper';\n\ninterface UserUpdateFormProps {\n\tusername: string;\n\temail: string;\n\tavatarUrl: string;\n}\n\nconst XUserUpdateForm: React.FC<UserUpdateFormProps> = ({\n\tusername,\n\temail,\n\tavatarUrl,\n}) => {\n\tconst [avatarPreview, setAvatarPreview] = useState(avatarUrl);\n\tconst [isSuccess, setIsSuccess] = useState(false);\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm<FormData>({\n\t\tresolver: yupResolver(UserUpdateSchema) as any,\n\t});\n\n\tconst onSubmit: SubmitHandler<FormData> = (data: FormData) => {\n\t\t// Process the form data (you may want to make an API call here)\n\n\t\t// Set the success state to true\n\t\tsetIsSuccess(true);\n\t};\n\tinterface FormData {\n\t\temail: string;\n\t\tusername: string;\n\t\tfile: File;\n\t\tpassword: string;\n\t\tconfirmPassword: string;\n\t}\n\tconst handleFileChange = (files: FileList | null) => {\n\t\tif (files && files.length > 0) {\n\t\t\tconst fileReader = new FileReader();\n\t\t\tfileReader.onload = (e) => {\n\t\t\t\tconst result = e.target?.result;\n\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\tsetAvatarPreview(result);\n\t\t\t\t}\n\t\t\t};\n\t\t\tfileReader.readAsDataURL(files[0]);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"grid grid-cols-12 col-span-12 gap-4\">\n\t\t\t<ComponentWrapper className=\"col-span-12 md:col-span-8\">\n\t\t\t\t<Card className=\"p-5 \">\n\t\t\t\t\t<form\n\t\t\t\t\t\tonSubmit={handleSubmit(onSubmit)}\n\t\t\t\t\t\tclassName=\"flex flex-col gap-4\"\n\t\t\t\t\t\tdata-testid=\"user-profile-form\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"mb-2 block\">\n\t\t\t\t\t\t\t\t<Label htmlFor=\"email\" value=\"Your email\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"name@xboard.com\"\n\t\t\t\t\t\t\t\tdefaultValue={email}\n\t\t\t\t\t\t\t\t{...register('email')}\n\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tdata-testid=\"email-error\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"font-medium text-red-500\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{errors.email?.message}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdata-testid=\"email-input\"\n\t\t\t\t\t\t\t\taria-invalid={!!errors.email}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"mb-2 block\">\n\t\t\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\t\t\thtmlFor=\"username\"\n\t\t\t\t\t\t\t\t\tvalue=\"Your username\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Your username\"\n\t\t\t\t\t\t\t\tdefaultValue={username}\n\t\t\t\t\t\t\t\t{...register('username')}\n\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tdata-testid=\"username-error\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"font-medium text-red-500\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{errors.username?.message}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdata-testid=\"username-input\"\n\t\t\t\t\t\t\t\taria-invalid={!!errors.username}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"fileUpload\">\n\t\t\t\t\t\t\t<div className=\"mb-2 block\">\n\t\t\t\t\t\t\t\t<Label htmlFor=\"file\" value=\"Upload Picture\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<FileInput\n\t\t\t\t\t\t\t\tid=\"file\"\n\t\t\t\t\t\t\t\t{...register('file')}\n\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\thandleFileChange(e.target.files)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"text-gray-500 text-sm mt-1\">\n\t\t\t\t\t\t\t\tA profile picture is useful to confirm you are\n\t\t\t\t\t\t\t\tlogged into your account.\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\timg={avatarPreview}\n\t\t\t\t\t\t\t\talt=\"Avatar Preview\"\n\t\t\t\t\t\t\t\tclassName=\"float-right mt-2\"\n\t\t\t\t\t\t\t\tdata-testid=\"avatar-image\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"mb-2 block\">\n\t\t\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\t\t\thtmlFor=\"password\"\n\t\t\t\t\t\t\t\t\tvalue=\"Your password\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t{...register('password')}\n\t\t\t\t\t\t\t\tdata-testid=\"password-input\"\n\t\t\t\t\t\t\t\taria-invalid={!!errors.password}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"mb-2 block\">\n\t\t\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\t\t\thtmlFor=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\tvalue=\"Confirm password\"\n\t\t\t\t\t\t\t\t\tdata-testid=\"confirm-password-input\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tid=\"confirmPassword\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t{...register('confirmPassword')}\n\t\t\t\t\t\t\t\taria-invalid={!!errors.confirmPassword}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"w-fit\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdata-testid=\"submit-button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tUpdate Profile\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t{/* Display success message if isSuccess is true */}\n\t\t\t\t\t\t{isSuccess && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tdata-testid=\"success-message\"\n\t\t\t\t\t\t\t\tclassName=\"text-green-500 mt-4\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tProfile updated successfully\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</form>\n\t\t\t\t</Card>\n\t\t\t</ComponentWrapper>\n\t\t\t<ComponentWrapper className=\"h-fit  col-span-12 md:col-span-4\">\n\t\t\t\t<Card className=\"p-5 \">\n\t\t\t\t\t<div className=\"mt-6\">\n\t\t\t\t\t\t<h3 className=\"text-lg font-bold mb-2 dark:text-white\">\n\t\t\t\t\t\t\tActions\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<p className=\"dark:text-white\">\n\t\t\t\t\t\t\tExplore new features, manage preferences, update\n\t\t\t\t\t\t\tyour profile, and stay updated with our latest\n\t\t\t\t\t\t\tofferings.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Button className=\"bg-slate-900 text-sky-200 my-4\">\n\t\t\t\t\t\t\tChange Password\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button className=\"bg-red-400 dark:bg-red-600 text-gray-700 dark:text-sky-500 my-4\">\n\t\t\t\t\t\t\tDelete Account\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Card>\n\t\t\t</ComponentWrapper>\n\t\t</div>\n\t);\n};\nexport default XUserUpdateForm;\n","import React from 'react';\nimport XBaseLayout from '@templates/BaseLayout';\nimport XUserProfileForm from '@organisms/UserUpdateForm';\nimport avatar from '@assets/images/avatar.jpg';\n\nconst XUpdateProfile: React.FC = () => {\n\tconst username = 'exampleUsername';\n\tconst email = 'example@email.com';\n\tconst avatarUrl = avatar;\n\n\treturn (\n\t\t<XBaseLayout pageTitle=\"Update Profile\">\n\t\t\t<div className=\"content-wrapper grid grid-cols-12 gap-4 mb-7\">\n\t\t\t\t<XUserProfileForm\n\t\t\t\t\tusername={username}\n\t\t\t\t\temail={email}\n\t\t\t\t\tavatarUrl={avatarUrl}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</XBaseLayout>\n\t);\n};\n\nexport default XUpdateProfile;\n"],"names":["signUpSchema","yup","username","required","transform","value","toLowerCase","matches","email","password","min","confirmPassword","oneOf","signInSchema","UserUpdateSchema","shape","_ref","_errors$email","_errors$username","avatarUrl","avatarPreview","setAvatarPreview","useState","isSuccess","setIsSuccess","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","_jsxs","className","children","_jsx","ComponentWrapper","Card","onSubmit","data","Label","htmlFor","TextInput","id","type","placeholder","defaultValue","helperText","message","FileInput","onChange","e","files","length","fileReader","FileReader","onload","_e$target","result","target","readAsDataURL","handleFileChange","Avatar","img","alt","Button","XUpdateProfile","avatar","XBaseLayout","pageTitle","XUserProfileForm"],"sourceRoot":""}