{"version":3,"file":"static/js/979.26fe7a36.chunk.js","mappings":"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","sources":["components/molecules/Pagination.tsx","components/organisms/UsersTable.tsx","components/pages/Users.tsx","../node_modules/@heroicons/react/24/outline/esm/MagnifyingGlassIcon.js"],"sourcesContent":["import React from 'react';\nimport { Pagination as FlowbitePagination } from 'flowbite-react';\n\ninterface XPaginationProps {\n\ttotalItems: number;\n\titemsPerPage: number;\n\tcurrentPage: number;\n\tonPageChange: (page: number) => void;\n}\n\nconst XPagination: React.FC<XPaginationProps> = ({\n\ttotalItems,\n\titemsPerPage,\n\tcurrentPage,\n\tonPageChange,\n}) => {\n\treturn (\n\t\t<div className=\"col-span-12 flex items-center justify-center mt-2 mb-10\">\n\t\t\t<FlowbitePagination\n\t\t\t\tlayout=\"pagination\"\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\ttotalPages={Math.ceil(totalItems / itemsPerPage)}\n\t\t\t\tonPageChange={onPageChange}\n\t\t\t\tpreviousLabel=\"Previous\"\n\t\t\t\tnextLabel=\"Next\"\n\t\t\t\tshowIcons\n\t\t\t\tclassName=\"space-x-2\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default XPagination;\n","import React, { useState } from 'react';\nimport { Table } from 'flowbite-react';\nimport Pagination from '../molecules/Pagination';\n\ninterface User {\n\tid: number;\n\tname: string;\n\temail: string;\n\trole: string;\n}\n\ninterface UsersTableProps {\n\tuserData: User[];\n\tusersPerPage: number;\n}\n\nconst XUsersTable: React.FC<UsersTableProps> = ({ userData, usersPerPage }) => {\n\tconst [currentPage, setCurrentPage] = useState(1);\n\n\tconst indexOfLastUser = currentPage * usersPerPage;\n\tconst indexOfFirstUser = indexOfLastUser - usersPerPage;\n\tconst currentUsers = userData.slice(indexOfFirstUser, indexOfLastUser);\n\n\tconst onPageChange = (page: number) => setCurrentPage(page);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"component-wrapper col-span-12 mb-1\">\n\t\t\t\t<Table striped>\n\t\t\t\t\t<Table.Head>\n\t\t\t\t\t\t<Table.HeadCell>User ID</Table.HeadCell>\n\t\t\t\t\t\t<Table.HeadCell>Name</Table.HeadCell>\n\t\t\t\t\t\t<Table.HeadCell>Email</Table.HeadCell>\n\t\t\t\t\t\t<Table.HeadCell>Role</Table.HeadCell>\n\t\t\t\t\t\t<Table.HeadCell>\n\t\t\t\t\t\t\t<span className=\"sr-only\">Edit</span>\n\t\t\t\t\t\t</Table.HeadCell>\n\t\t\t\t\t</Table.Head>\n\t\t\t\t\t<Table.Body className=\"divide-y\">\n\t\t\t\t\t\t{currentUsers.map((user) => (\n\t\t\t\t\t\t\t<Table.Row\n\t\t\t\t\t\t\t\tkey={user.id}\n\t\t\t\t\t\t\t\tclassName=\"bg-white dark:border-gray-700 dark:bg-gray-800\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Table.Cell>{user.id}</Table.Cell>\n\t\t\t\t\t\t\t\t<Table.Cell>{user.name}</Table.Cell>\n\t\t\t\t\t\t\t\t<Table.Cell>{user.email}</Table.Cell>\n\t\t\t\t\t\t\t\t<Table.Cell>{user.role}</Table.Cell>\n\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"font-medium text-cyan-600 hover:underline dark:text-cyan-500\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Table.Body>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t\t<Pagination\n\t\t\t\ttotalItems={userData.length}\n\t\t\t\titemsPerPage={usersPerPage}\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\tonPageChange={onPageChange}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default XUsersTable;\n","import React from 'react';\nimport XBaseLayout from '../templates/BaseLayout';\nimport { users } from '../../assets/data/sampleData';\nimport XUsersTable from '../organisms/UsersTable';\n\nconst XUsers: React.FC = () => {\n\treturn (\n\t\t<XBaseLayout>\n\t\t\t<div className=\"content-wrapper grid grid-cols-12 \">\n\t\t\t\t<h1 className=\"col-span-12 text-2xl font-bold text-gray-900 dark:text-white w-full mb-7\">\n\t\t\t\t\tUsers\n\t\t\t\t</h1>\n\t\t\t\t<XUsersTable userData={users} usersPerPage={10} />\n\t\t\t</div>\n\t\t</XBaseLayout>\n\t);\n};\n\nexport default XUsers;\n","import * as React from \"react\";\nfunction MagnifyingGlassIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(MagnifyingGlassIcon);\nexport default ForwardRef;"],"names":["_ref","totalItems","itemsPerPage","currentPage","onPageChange","_jsx","className","children","FlowbitePagination","layout","totalPages","Math","ceil","previousLabel","nextLabel","showIcons","userData","usersPerPage","setCurrentPage","useState","indexOfLastUser","indexOfFirstUser","currentUsers","slice","_jsxs","_Fragment","Table","striped","Head","HeadCell","Body","map","user","Row","Cell","id","name","email","role","href","Pagination","length","page","XUsers","XBaseLayout","XUsersTable","users","React","svgRef","title","titleId","props","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}